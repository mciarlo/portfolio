@font-face {
    font-family: 'readabiliconsregular';
    src: url('readabilicons-regular.eot');
    src: url('readabilicons-regular.eot?#iefix') format('embedded-opentype'),
         url('readabilicons-regular.woff') format('woff'),
         url('readabilicons-regular.ttf') format('truetype'),
         url('readabilicons-regular.svg#readabiliconsregular') format('svg');
    font-weight: normal;
    font-style: normal;

}

@mixin aliasing {
  -webkit-font-smoothing: antialiased;

  &:before {
    -webkit-font-smoothing: subpixel-antialiased;
  }
}

@mixin reutersfont {
  font-family: Anaheim;
  line-height: 1;
  letter-spacing: -0.04em;
  font-weight: normal;
}

@mixin readabilityfont {
  font-family: Arbutus Slab;
  letter-spacing: -0.03em;
  line-height: 1;
}

@mixin arc90font {
  font-family: Kite One;
  line-height: 1.3;
}

@mixin textmask {
  background-image: url(../images/mask.jpg); 
  -webkit-background-clip: text;  
  background-clip: text;  
  -webkit-background-size:100%;
  color: rgba(0,0,0,0.0);
  padding-top: .2em;
  -webkit-mask-origin: padding;
}

@mixin readabilicons {
  font-family: 'readabiliconsregular';
}

@mixin border-radius($radius) {
  border-radius: $radius;
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
  -ms-border-radius: $radius;
}

@mixin serif {
  font-family: ‘Palatino Linotype’, ‘Book Antiqua’, Palatino, serif;
}

@mixin handwritten {
  font-family: Sue Ellen Francisco;
}

@mixin sans-serif {
  font-family: Trebuchet MS, Lucida Grande, sans-serif;
}


@mixin opacity($float, $percent) {
  opacity: $float;
  filter: alpha(opacity=$percent);
  -ms-filter: progid:DXImageTransform.Microsoft.Alpha(Opacity = #{$percent});
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity =  #{$percent});
}

@mixin box-shadow($x, $y, $width, $color) {
  box-shadow: $x $y $width $color;
  -webkit-box-shadow: $x $y $width $color;
  -moz-box-shadow: $x $y $width $color;
  -ms-box-shadow: $x $y $width $color;
}

@mixin text-shadow($x, $y, $color) {
  text-shadow: 0 $x $y $color;
  -webkit-text-shadow: 0 $x $y $color;
  -moz-text-shadow: 0 $x $y $color;
  -ms-text-shadow: 0 $x $y $color;
}

@mixin transition($property, $duration, $easing) {
  transition: $property $duration $easing;
  -webkit-transition: $property $duration $easing;
  -moz-transition: $property $duration $easing;
  -ms-transition: $property $duration $easing;
}

@mixin translate3d($x, $y, $z) {
  transform: translate3d($x, $y, $z);
  -webkit-transform: translate3d($x, $y, $z);
  -moz-transform: translate3d($x, $y, $z);
  -ms-transform: translate3d($x, $y, $z);
}

@mixin transform($property, $value, $duration) {
  transform: $property($value);
  -webkit-transform: $property($value);
  -moz-transform: $property($value);
  -ms-transform: $property($value);

  transition-duration: $duration;
  -webkit-transition-duration: $property($value);
  -moz-transition-duration: $property($value);
  -ms-transition-duration: $property($value);
}

@mixin animation($name, $duration, $repeat, $easing, $delay) {
  animation: $name $duration $repeat $easing;
  -webkit-animation: $name $duration $repeat $easing;
  -moz-animation: $name $duration $repeat $easing;
  -ms-animation: $name $duration $repeat $easing;
  animation-delay: $delay;
  -webkit-animation-delay: $delay;
  -ms-animation-delay: $delay;
  -moz-animation-delay: $delay;
}

@mixin rotate($value) {
  transform: rotateZ($value);
  -webkit-transform: rotateZ($value);
  -moz-transform: rotateZ($value);
  -ms-transform: rotateZ($value);
}

@mixin overflowfix {
  &:after {
    content: "";
    clear: both;
    display: block;
  }
}

@mixin box-sizing {
  box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
}